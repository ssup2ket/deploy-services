apiVersion: apps/v1
kind: Deployment
metadata:
  name: ssup2ket-auth-debezium-deployment
  labels:
    app: ssup2ket-auth-debezium
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  selector:
    matchLabels:
      app: ssup2ket-auth-debezium
  template:
    metadata:
      labels:
        app: ssup2ket-auth-debezium
    spec:
      volumes:
      - name: configmap
        configMap:
          name: ssup2ket-auth-debezium-configmap
          defaultMode: 0744
      containers:
      - name: debezium-connector
        image: debezium/connect:1.6.2.Final
        volumeMounts:
        - mountPath: /etc/debezium/connector.json
          name: configmap
          subPath: connector.json
        - mountPath: /health.sh
          name: configmap
          subPath: health.sh
        - mountPath: /kafka/config/log4j.properties
          name: configmap
          subPath: log4j.properties
        env:
        - name: GROUP_ID
          value: '1'
        - name: CONFIG_STORAGE_TOPIC
          value: ssup2ket-auth-config
        - name: OFFSET_STORAGE_TOPIC
          value: ssup2ket-auth-offset
        - name: STATUS_STORAGE_TOPIC
          value: ssup2ket-auth-status
        - name: ADVERTISED_HOST_NAME
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        livenessProbe:
          exec:
            command: ["/bin/sh", "-c", "! curl http://$(hostname):8083/connectors/ssup2ket-auth/status 2>/dev/null | grep -q \"state\":\"FAILED\""]
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "sleep 30s && curl -XPOST -H 'Content-Type:application/json' http://$(hostname):8083/connectors/ -d@/etc/debezium/connector.json"]
